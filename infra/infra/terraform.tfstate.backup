{
  "version": 4,
  "terraform_version": "0.12.8",
  "serial": 12,
  "lineage": "0e4321b7-762c-6518-2d18-28528f487590",
  "outputs": {},
  "resources": [
    {
      "module": "module.archivetozip",
      "mode": "data",
      "type": "archive_file",
      "name": "zip",
      "provider": "provider.archive",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "04d2ab32ba094d6dc16ee777a3fa6f64330389fe",
            "output_base64sha256": "LqmrtbFsSCFmWBW540pJs42Y4XEdBOhyf3c/4doMfy0=",
            "output_md5": "236c93b2ae161acd43758f87c8c17ea2",
            "output_path": "interruption.zip",
            "output_sha": "04d2ab32ba094d6dc16ee777a3fa6f64330389fe",
            "output_size": 350,
            "source": [],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": "interruption.py",
            "type": "zip"
          }
        }
      ]
    },
    {
      "module": "module.archivetozip1",
      "mode": "data",
      "type": "archive_file",
      "name": "zip1",
      "provider": "provider.archive",
      "instances": []
    },
    {
      "module": "module.spot_tagging_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "instance-assume-role-policy-for-spotfleet",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1116480091",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"spotfleet.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "spotfleet.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.python_file",
      "mode": "data",
      "type": "template_file",
      "name": "edit_template",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "05f62506da752c927b0acf5a92cc48413df9c2026eed4f4c1dd6e66cd0eadbbb",
            "rendered": "import json\nimport boto3\n\ndef lambda_handler(event, context):\n    client = boto3.client('autoscaling')\n    response = client.set_desired_capacity(\n        AutoScalingGroupName='spot',   ## match and replace 'spot' with the name of your Auto Scaling group here if required\n        DesiredCapacity=1\n    )\n",
            "template": "import json\nimport boto3\n\ndef lambda_handler(event, context):\n    client = boto3.client('autoscaling')\n    response = client.set_desired_capacity(\n        AutoScalingGroupName='${auto_scaling_group_name}',   ## match and replace 'spot' with the name of your Auto Scaling group here if required\n        DesiredCapacity=1\n    )\n",
            "vars": {
              "auto_scaling_group_name": "spot"
            }
          }
        }
      ]
    },
    {
      "module": "module.python_file2",
      "mode": "data",
      "type": "template_file",
      "name": "edit_template2",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.autoscaling",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "pro_auto",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.cw_rule",
      "mode": "managed",
      "type": "aws_cloudwatch_event_rule",
      "name": "lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:events:us-east-1:351757488670:rule/on-interruption-warning",
            "description": "Rule to trigger Lambda function on Interruption warning",
            "event_pattern": "{\"detail-type\":[\"EC2 Spot Instance Interruption Warning\"],\"source\":[\"aws.ec2\"]}",
            "id": "on-interruption-warning",
            "is_enabled": true,
            "name": "on-interruption-warning",
            "name_prefix": null,
            "role_arn": "",
            "schedule_expression": "",
            "tags": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.cw_rule1",
      "mode": "managed",
      "type": "aws_cloudwatch_event_rule",
      "name": "lambda1",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:events:us-east-1:351757488670:rule/on-state-change-to-running",
            "description": "Rule to trigger Lambda function on state running",
            "event_pattern": "{\"detail\":{\"state\":[\"running\"]},\"detail-type\":[\"EC2 Instance State-change Notification\"],\"source\":[\"aws.ec2\"]}",
            "id": "on-state-change-to-running",
            "is_enabled": true,
            "name": "on-state-change-to-running",
            "name_prefix": null,
            "role_arn": "",
            "schedule_expression": "",
            "tags": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.cw_rule",
      "mode": "managed",
      "type": "aws_cloudwatch_event_target",
      "name": "call_lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-east-1:351757488670:function:first_function",
            "batch_target": [],
            "ecs_target": [],
            "id": "on-interruption-warning-lambda",
            "input": "",
            "input_path": "",
            "input_transformer": [],
            "kinesis_target": [],
            "role_arn": "",
            "rule": "on-interruption-warning",
            "run_command_targets": [],
            "sqs_target": [],
            "target_id": "lambda"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_cloudwatch_event_rule.lambda"
          ]
        }
      ]
    },
    {
      "module": "module.cw_rule1",
      "mode": "managed",
      "type": "aws_cloudwatch_event_target",
      "name": "call_lambda1",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.iamrole",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "iam_for_lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::351757488670:role/iam_for_lambda",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2019-09-23T10:27:15Z",
            "description": "",
            "force_detach_policies": false,
            "id": "iam_for_lambda",
            "max_session_duration": 3600,
            "name": "iam_for_lambda",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "unique_id": "AROAVDZTBKIPEOFFSIZF4"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.spot_tagging_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "spot-fleet-tagging-role",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::351757488670:role/SpotFleetTaggingRole-00bb2d9d",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"spotfleet.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2019-09-23T10:27:15Z",
            "description": "",
            "force_detach_policies": false,
            "id": "SpotFleetTaggingRole-00bb2d9d",
            "max_session_duration": 3600,
            "name": "SpotFleetTaggingRole-00bb2d9d",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "unique_id": "AROAVDZTBKIPDIP55DF4S"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.aws_iam_policy_document.instance-assume-role-policy-for-spotfleet"
          ]
        }
      ]
    },
    {
      "module": "module.iampolicy",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "test_policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "iam_for_lambda:admin_access",
            "name": "admin_access",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
            "role": "iam_for_lambda"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.spot_tagging_role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "spot_request_policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "SpotFleetTaggingRole-00bb2d9d-20190923102718769300000001",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole",
            "role": "SpotFleetTaggingRole-00bb2d9d"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_iam_role.spot-fleet-tagging-role"
          ]
        }
      ]
    },
    {
      "module": "module.internat_gateway",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "inter_gateway",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.function_two",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "test_lambda",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.function_one",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "test_lambda",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-east-1:351757488670:function:first_function",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "filename": "interruption.zip",
            "function_name": "first_function",
            "handler": "interruption.lambda_handler",
            "id": "first_function",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:351757488670:function:first_function/invocations",
            "kms_key_arn": "",
            "last_modified": "2019-09-23T10:27:23.272+0000",
            "layers": null,
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:351757488670:function:first_function:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::351757488670:role/iam_for_lambda",
            "runtime": "python3.7",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "LqmrtbFsSCFmWBW540pJs42Y4XEdBOhyf3c/4doMfy0=",
            "source_code_size": 350,
            "tags": null,
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.cw_rule",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "allow_cloudwatch_to_call_lambda_function",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "first_function",
            "id": "AllowExecutionFromCloudWatch",
            "principal": "events.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:events:us-east-1:351757488670:rule/on-interruption-warning",
            "statement_id": "AllowExecutionFromCloudWatch",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_cloudwatch_event_rule.lambda"
          ]
        }
      ]
    },
    {
      "module": "module.cw_rule1",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "call_lambda1",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.launch_config",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "launch-configuration",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.pub_alb",
      "mode": "managed",
      "type": "aws_lb",
      "name": "terra_alb",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.listner",
      "mode": "managed",
      "type": "aws_lb_listener",
      "name": "alb_listing",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.targetgroup",
      "mode": "managed",
      "type": "aws_lb_target_group",
      "name": "terra_target_group",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.pub_routetable",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "route_table",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.pub3_association_to_routetable",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "subnet_association",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.pub1_association_to_routetable",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "subnet_association",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.pub4_association_to_routetable",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "subnet_association",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.pub2_association_to_routetable",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "subnet_association",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.security_group",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "terra_sg",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.spot_fleet_request",
      "mode": "managed",
      "type": "aws_spot_fleet_request",
      "name": "cheap_compute",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.pubb_subnet3",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.puba_subnet2",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.puba_subnet1",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.pubb_subnet4",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "subnet",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.python_file",
      "mode": "managed",
      "type": "local_file",
      "name": "create_file",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "import json\nimport boto3\n\ndef lambda_handler(event, context):\n    client = boto3.client('autoscaling')\n    response = client.set_desired_capacity(\n        AutoScalingGroupName='spot',   ## match and replace 'spot' with the name of your Auto Scaling group here if required\n        DesiredCapacity=1\n    )\n",
            "content_base64": null,
            "filename": "interruption.py",
            "id": "4ba3f448c58f741cd04c2cd94cae27740c6b5d93",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.edit_template"
          ]
        }
      ]
    },
    {
      "module": "module.python_file2",
      "mode": "managed",
      "type": "local_file",
      "name": "create_file2",
      "provider": "provider.local",
      "instances": []
    }
  ]
}
